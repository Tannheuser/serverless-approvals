schema {
    query: Query
    mutation: Mutation
}

type Query {
    getPendingRequests(filter: ApprovalRequestFilter!): [ApprovalRequest]
    getReviewableRequests(filter: ReviewableRequestFilter!): [ApprovalRequest]
}

type Mutation {
  approveRequest(input: ProcessRequestInput!): ApprovalRequest
  rejectRequest(input: ProcessRequestInput!): ApprovalRequest
}

type ApprovalRequest {
    action: String!
    originType: String!
    originId: String!
    status: ApprovalRequestStatus
    createdAt: String
    createdBy: String
    updatedAt: String
    updatedBy: String
}

input ApprovalRequestFilter {
    originType: String!
    originId: String
}

input ReviewableRequestFilter {
    originType: String!
    originId: String
    sub: String!
}

input ProcessRequestInput {
    action: String!
    originId: String!
    originType: String!
    sub: String!
    message: String
}

enum ApprovalRequestStatus {
  Approved,
  Rejected,
  Deleted,
  Pending
}
